{"version":3,"file":"static/js/725.fc5167b3.chunk.js","mappings":"2NAIaA,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAASG,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACzC,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAoBK,MAAO,CAAEC,KAAMT,GAAxD,WACE,SAAC,KAAD,CACEU,IAAG,0CAAqCJ,GACxCK,IAAKN,KAEP,SAAC,KAAD,UAAWA,GAAkBD,MAL/B,UAAmCD,KAD1BA,EAUd,KAGN,EACD,W","sources":["components/FilmList/FilmList.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { Item, Image, FilmName } from './FilmList.styled';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ response }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {response.map(({ id, name, original_title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} key={`${id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={original_title}\n              />\n              <FilmName>{original_title || name}</FilmName>\n            </Link>\n          </Item>\n        );\n      })}\n    </>\n  );\n};\nexport default FilmList;\nFilmList.propTypes = {\n  response: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ),\n};\n"],"names":["FilmList","response","location","useLocation","map","id","name","original_title","poster_path","to","state","from","src","alt"],"sourceRoot":""}